{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsСontainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","PostElements","posts","map","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","action","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","photos","large","profilePhoto","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.26e108f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3fU5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2rOvW\",\"posts\":\"MyPosts_posts__3PW7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3G2jB\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://static.kinoafisha.info/upload/news/596493856698.jpg\" alt=\"\"/>\r\n          {props.message}\r\n          <p>{props.likesCount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators'\r\nimport {Textarea} from '../../common/FormControls/FormControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst  AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div><Field placeholder=\"Enter your message\" name=\"newPostText\" component={Textarea} validate={[required, maxLength10]}/></div>\r\n      <div><button>Add post</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostReduxForm = reduxForm({\r\n  form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm);\r\nconst MyPosts = (props) => {\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  let PostElements = props.posts.map(p => (<Post key={p.id} message={p.message} likesCount={p.likesCount} />));\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>MyPosts</h3>\r\n      <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n      <div className={s.posts}>\r\n        {PostElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux'\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n          let action = addPostActionCreator(newPostText);\r\n          dispatch(action);\r\n        },\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import s from './ProfileInfo.module.css';\r\nimport React, { useState, useEffect } from 'react';\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);\r\n    }\r\n    useEffect(() => {\r\n       setStatus(props.status);\r\n    }, [props.status])\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{status ||  \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport profilePhoto from \"../../../assets/images/users.png\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if(!profile) {\r\n    return <Preloader />\r\n  }\r\n    return (\r\n      <div>\r\n        <div className={s.descriptionBlock}>\r\n          <div>\r\n          <img src={profile.photos.large ? profile.photos.large : profilePhoto} alt=\"\" />\r\n            <ProfileStatusWithHooks status={status} updateStatus = {updateStatus}/>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from './MyPosts/MyPostsСontainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\"\r\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}), withRouter)(ProfileContainer);"],"sourceRoot":""}